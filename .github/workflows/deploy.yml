name: Android Release

on:
  workflow_dispatch:
  push:
    branches: [main, master]

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: "3.24.3"
          cache: true

      - name: Install Android SDK 35 + build-tools
        env:
          ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
        run: |
          yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" \
            "platform-tools" \
            "platforms;android-35" \
            "build-tools;35.0.0"
          yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --licenses

      # ---- Caches (speed) ----
      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle', '**/*.gradle.kts', 'gradle-wrapper.properties') }}
          restore-keys: gradle-${{ runner.os }}-

      - name: Cache Pub
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: pub-${{ runner.os }}-${{ hashFiles('pubspec.lock') }}
          restore-keys: pub-${{ runner.os }}-

      # ---- Project hygiene ----
      - name: Remove KTS duplicates if present
        run: |
          rm -f android/settings.gradle.kts || true
          rm -f android/app/build.gradle.kts || true

      - name: Ensure Android wrapper exists
        run: |
          if [ ! -f android/gradlew ]; then
            flutter create . --platforms=android --project-name autocare_pro
          fi
          chmod +x android/gradlew

      # If you pinned timezone ^0.9.x earlier, bump to ^0.10.x to satisfy flutter_local_notifications ^19.x
      - name: Update timezone dep (if needed)
        run: |
          if grep -q 'timezone:' pubspec.yaml && grep -q '^ *timezone: *\^0\.9\.' pubspec.yaml; then
            flutter pub add timezone:^0.10.1
          fi
          flutter pub get

      # ---- Build APK ----
      - name: Build release APK
        run: |
          flutter --version
          # Once stable, you can remove the clean to benefit more from caches
          flutter clean
          flutter pub get
          # Ensure android/app/build.gradle has:
          #   compileSdk 35, targetSdk 35
          #   compileOptions { coreLibraryDesugaringEnabled true; sourceCompatibility JavaVersion.VERSION_17; targetCompatibility JavaVersion.VERSION_17 }
          #   dependencies { coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:2.1.4" }
          flutter build apk --release -v

      # ---- Upload artifact to GitHub (optional, nice backup) ----
      - name: Upload APK artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      # ---- Distribute to Firebase App Distribution (TOKEN auth) ----
      - name: Firebase App Distribution (Android)
        if: success()
        uses: wzieba/Firebase-Distribution-Github-Action@v2
        with:
          appId: ${{ secrets.FIREBASE_ANDROID_APP_ID }}
          token: ${{ secrets.FIREBASE_TOKEN }}
          file: build/app/outputs/flutter-apk/app-release.apk
          # Use ONE of the following:
          testers: "ahmerparacha2016@gmail.com"
          # groups: "testers"
          releaseNotes: "CI build from ${{ github.sha }}"
          debug: true

      # ---- Diagnostics only if build fails ----
      - name: Print desugar dependency tree (diagnostic)
        if: failure() && hashFiles('android/gradlew') != ''
        run: |
          cd android
          ./gradlew :app:dependencies --configuration coreLibraryDesugaringClasspath || true

      - name: Gradle assemble with stacktrace (diagnostic)
        if: failure() && hashFiles('android/gradlew') != ''
        run: |
          cd android
          ./gradlew app:assembleRelease --no-daemon --stacktrace --info || true
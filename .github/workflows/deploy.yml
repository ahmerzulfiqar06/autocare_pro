name: Android Release

on:
  workflow_dispatch:
  push:
    branches: [main, master]

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      # Sets up ANDROID_SDK_ROOT and cmdline-tools (so sdkmanager path works)
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: "3.24.3"
          cache: true

      - name: Install Android SDK 35 + build-tools
        env:
          ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
        run: |
          yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" \
            "platform-tools" \
            "platforms;android-35" \
            "build-tools;35.0.0"
          yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --licenses

      # Optional: speed up builds
      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle', '**/*.gradle.kts', 'gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Cache Pub (Dart/Flutter packages)
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: pub-${{ runner.os }}-${{ hashFiles('pubspec.lock') }}
          restore-keys: |
            pub-${{ runner.os }}-

      # Keep Groovy templates authoritative
      - name: Remove KTS duplicates if present
        run: |
          rm -f android/settings.gradle.kts || true
          rm -f android/app/build.gradle.kts || true

      # Make sure wrapper exists (some repos miss android/gradlew)
      - name: Ensure Android wrapper exists
        run: |
          if [ ! -f android/gradlew ]; then
            flutter create .   # rehydrates missing Android wrapper files
          fi
          chmod +x android/gradlew

      # Fix pubspec conflict you hit earlier (timezone vs flutter_local_notifications)
      - name: Update timezone dep (if needed)
        run: |
          if grep -q 'timezone:' pubspec.yaml && grep -q '^ *timezone: *\^0\.9\.' pubspec.yaml; then
            flutter pub add timezone:^0.10.1
          fi
          flutter pub get

      - name: Build release APK
        run: |
          flutter --version
          flutter clean
          rm -rf android/.gradle android/build build
          flutter pub get
          # VERIFY in android/app/build.gradle:
          #   compileSdk 35
          #   targetSdk 35
          #   compileOptions {
          #     sourceCompatibility JavaVersion.VERSION_17
          #     targetCompatibility JavaVersion.VERSION_17
          #     coreLibraryDesugaringEnabled true
          #   }
          #   dependencies {
          #     coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:2.1.4"
          #   }
          flutter build apk --release -v

      # Print a detailed dependency graph for desugaring if the build fails
      - name: Print desugar dependency tree (diagnostic)
        if: failure()
        run: |
          cd android
          ./gradlew :app:dependencies --configuration coreLibraryDesugaringClasspath

      # Force full Gradle stacktrace if Flutter build fails
      - name: Gradle assemble with stacktrace (diagnostic)
        if: failure()
        run: |
          cd android
          ./gradlew app:assembleRelease --no-daemon --stacktrace --info

      - name: Upload APK artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: build/app/outputs/flutter-apk/app-release.apk